1.  input: array A of size N
	output: majority number Z if one exists

	initialize STL map MAP with key string and value int
	initialize MAX = 0
	for i in range (0 to N - 1)
		if A[i] is not in MAP
			insert A[i] into MAP and initialize value as 1
		else
			iterate value A[i] in MAP[A[i]]
		if the value of A[i] > MAX and A[i] >= (N/2 +1)
			majElem = A[i]
			break
	return A[i] if majElem has been set else say not majElem exists

2. 5.7 of textbook
	O(N^2) 
3. 5.8 of textbook
	The N binary searches result in O(Nlog(N)) and the two O(N) are O(N). Thus the final result is O(Nlog(N)).
4. 5.14 of textbook
	a. 5*0.5ms = 2.5ms
	b. 100*log100 = 0.5ms => 
	c. O(500^2) = 25*0.5ms = 12.5ms
	d. O(500^3) = 125*0.5ms = 62.5ms

5. 5.20 of textbook
	1.a O(N)
	2.a O(N)
	3.a O(N^2)
	4.a O(N)
	5.a O(N^3)
	6.a O(Nlog(N)
	7.a O(N^3log(N))
	8.a O(log(N))